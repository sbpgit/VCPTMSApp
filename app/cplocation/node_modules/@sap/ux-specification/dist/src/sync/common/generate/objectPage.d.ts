import type { ConverterOutput, EntityType } from '@sap-ux/vocabularies-types';
import { FioriElementsVersion } from '../../../specification/common';
import type { FacetConfig } from '..';
import { SectionType } from '..';
import type { EntitySet } from '@sap-ux/annotation-converter';
/**
 * Adds definitions for forms in object page sections to the app schema
 * @param {SectionType} sectionType - prefix to distinguish Section and HeaderSection
 * @param {FacetConfig} section - facet or section in the FE core model
 * @param {object} appSchemaSection - current definition of facet or section in the JSON schema
 * @param {object} appSchema - app specific schema that gets enhanced
 * @param {FioriElementsVersion} version - Fiori Elements version
 */
export declare function handleForm(sectionType: SectionType, section: FacetConfig, appSchemaSection: object, appSchema: object, version: FioriElementsVersion, withActions?: boolean): void;
/**
 * Replaces an alias in an annotation ID or reference, based on the AVT references' list
 * @param annotationIdentifier - annotation ID or reference
 * @param {ConverterOutput} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool
 * @returns the converted string
 */
export declare function replaceAlias(annotationIdentifier: string, oDataServiceAVT: ConverterOutput): string;
/**
 * Common routine to determine the name and the ID of a header action
 * @param action - action as given by AVT
 * @param entityType - entity type by AVT
 * @returns an object comprising action name and action id
 */
export declare function getActionNameAndId(action: string, entityType: EntityType): {
    actionName: string;
    actionId: string;
};
/**
 * Add Object Page Footer Action Buttons to app-specific schema
 *
 * @param {object} appSchema Schema of the app
 * @param {EntityType} entityType - current entity type
 * @param {ConverterOutput} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool
 */
export declare function addFooterActions(appSchema: object, entityType: EntityType, oDataServiceAVT: ConverterOutput): void;
/**
 * Add Object Page Header Action Buttons to app-specific schema
 * @param {object} appSchema Schema of the app
 * @param {EntityType} entityType - current entity type
 * @param {ConverterOutput} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool
 */
export declare function addHeaderActions(appSchema: object, entityType: EntityType, oDataServiceAVT: ConverterOutput, addHeaderActionCallBack: any): void;
/**
 * Adds common Object Page Header definitions to the app schema
 * @param appSchema - app-specific JSOn schema
 * @param entityType - current entity Type
 */
export declare function addCommonHeaderSchema(appSchema: object, entityType: EntityType): void;
/**
 * Common logic to determine the EntitySet of a facet
 * @param facet - current facet or section
 * @param serviceAVT - AVT converter output, comprising all annotation information
 * @returns the entity set as defined in AVT, if found
 */
export declare function determineEntitySetOfFacet(facet: FacetConfig, serviceAVT: ConverterOutput): EntitySet | undefined;
