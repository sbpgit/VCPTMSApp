-- PROCEDURE P_UPSERT_IBP_TS_TABLES(OUT vcdemand_rows INT, OUT demand_rows INT , OUT comp_demand_rows INT) LANGUAGE SQLSCRIPT
PROCEDURE P_UPSERT_IBP_TS_TABLES() LANGUAGE SQLSCRIPT
AS
BEGIN
    -- DO USE SINGLE UPSERT AS IT CAN LEAD TO OUT OF MEMORY WHEN SELECTING LARGE VOLUME OF DATA
    --UPSERT "IBP_LOCPRODCUSTCLASSCHARVAL_TS"
    --("KEYFIGUREDATE", "LOCID", "PRDID", "ACTUALDEMANDVC",
    --"CUSTID", "VCCLASS", "VCCHAR", "VCCHARVALUE")
    --SELECT "WEEK_DATE",
    --LOCATION_ID, PRODUCT_ID, SUM(ORD_QTY), CUSTOMER_GROUP, "VCCLASS", CHAR_NUM, CHARVAL_NUM 
    --FROM V_IBP_SALESH_WEEK_DATE
    --GROUP BY "WEEK_DATE", LOCATION_ID, PRODUCT_ID, CUSTOMER_GROUP, "VCCLASS", CHAR_NUM, CHARVAL_NUM 
    --ORDER BY "WEEK_DATE", LOCATION_ID, PRODUCT_ID, CUSTOMER_GROUP, "VCCLASS", CHAR_NUM,CHARVAL_NUM;

    DECLARE CURSOR vc_weekdate  FOR select DISTINCT "WEEK_DATE" from "V_IBP_SALESH_WEEK_DATE";
    DECLARE CURSOR custlocprod_weekdate  FOR select DISTINCT "WEEK_DATE" from "V_IBP_SALESH_CUST_LOC_PROD_WEEK_DATE";
    DECLARE CURSOR complocprod_weekdate  FOR select DISTINCT "WEEK_DATE" from "V_IBP_SALESH_COMP_LOC_PROD_WEEK_DATE";

    DECLARE vcdemand_rows, demand_rows, comp_demand_rows INT;
    DECLARE ts TIMESTAMP;   

    vcdemand_rows = 0;
    demand_rows = 0;
    comp_demand_rows = 0;

    FOR cur_row as vc_weekdate DO
		UPSERT "IBP_LOCPRODCUSTCLASSCHARVAL_TS"
		("KEYFIGUREDATE", "LOCID", "PRDID", "ACTUALDEMANDVC",
		 "CUSTID", "VCCLASS", "VCCHAR", "VCCHARVALUE")
		SELECT "WEEK_DATE",
		LOCATION_ID, PRODUCT_ID, SUM(ORD_QTY), CUSTOMER_GROUP, "VCCLASS", CHAR_NUM, CHARVAL_NUM 
		FROM V_IBP_SALESH_WEEK_DATE WHERE "WEEK_DATE" = cur_row."WEEK_DATE"
		GROUP BY "WEEK_DATE", LOCATION_ID, PRODUCT_ID, CUSTOMER_GROUP, "VCCLASS", CHAR_NUM, CHARVAL_NUM 
		ORDER BY "WEEK_DATE", LOCATION_ID, PRODUCT_ID, CUSTOMER_GROUP, "VCCLASS", CHAR_NUM,CHARVAL_NUM;
        vcdemand_rows = vcdemand_rows + ::ROWCOUNT;
		COMMIT;
    END FOR;


    FOR cur_row as custlocprod_weekdate DO
		UPSERT "IBP_LOCPRODCUST_TS"
        ("KEYFIGUREDATE","LOCID","PRDID","ACTUALDEMAND", "CUSTID")
        SELECT "WEEK_DATE",
        LOCATION_ID, PRODUCT_ID, SUM(ORD_QTY), CUSTOMER_GROUP
        FROM V_IBP_SALESH_CUST_LOC_PROD_WEEK_DATE WHERE "WEEK_DATE" = cur_row."WEEK_DATE"
        GROUP BY "WEEK_DATE", LOCATION_ID, PRODUCT_ID, CUSTOMER_GROUP 
        ORDER BY "WEEK_DATE", LOCATION_ID, PRODUCT_ID, CUSTOMER_GROUP;
        demand_rows = demand_rows + ::ROWCOUNT;
		COMMIT;
    END FOR;

    FOR cur_row as complocprod_weekdate DO
		UPSERT "IBP_LOCPRODCOMP_TS"
        ("KEYFIGUREDATE","LOCID","PRDID","ACTUALCOMPONENTDEMAND","PRDFR")
        SELECT "WEEK_DATE",
        LOCATION_ID, PRODUCT_ID, SUM(ORD_QTY), COMPONENT
        FROM V_IBP_SALESH_COMP_LOC_PROD_WEEK_DATE  WHERE "WEEK_DATE" = cur_row."WEEK_DATE"
        GROUP BY "WEEK_DATE", LOCATION_ID, PRODUCT_ID, COMPONENT 
        ORDER BY "WEEK_DATE", LOCATION_ID, PRODUCT_ID, COMPONENT;
        comp_demand_rows = comp_demand_rows + ::ROWCOUNT;
		COMMIT;
    END FOR;

    ts = current_utctimestamp;

    UPSERT IBP_TS_GEN_RESULTS VALUES 
         (vcdemand_rows,demand_rows,comp_demand_rows, ts) WITH PRIMARY KEY;
END;