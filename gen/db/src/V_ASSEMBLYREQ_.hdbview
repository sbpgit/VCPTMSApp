
--
-- Name:            V_COMPOD_TSPRED
-- Description:     Get component requirement for location product component based on Version scenario and week date
-- Join Details:    CP_BOMHEADER -  Master table for BOM
--                  CP_IBP_FUTUREDEMAND - IBP future demand tables
--                  CP_PVS_BOM -  PVS-BOM assignment table
--                  V_BOM_TSPREDICTION-  View to fet BOM timeseries predictions for Object dependency
--                  V_STRUC_NODE_QTY-    View to get structure node quantity
--

VIEW "V_ASSEMBLYREQ" AS
SELECT DISTINCT CP_BOMHEADER.LOCATION_ID,
  CP_FACTORY_SALESLOC.FACTORY_LOC,
  CP_BOMHEADER.PRODUCT_ID,
  CP_BOMHEADER.ITEM_NUM,
  CP_BOMHEADER.COMPONENT,
  CP_PVS_BOM.STRUC_NODE,
  CP_IBP_FUTUREDEMAND.VERSION,
  CP_IBP_FUTUREDEMAND.SCENARIO,
  CP_IBP_FUTUREDEMAND.WEEK_DATE,
  CP_IBP_FUTUREDEMAND.QUANTITY,
  CP_BOMHEADER.COMP_QTY AS COMPONENT_QTY,
  V_BOM_TSPREDICTION.MODEL_VERSION,
  CASE
    WHEN V_BOM_TSPREDICTION.PREDICTED IS NULL THEN ROUND(
      CP_IBP_FUTUREDEMAND.QUANTITY * CP_BOMHEADER.COMP_QTY,
      2
    )
    ELSE ROUND(
      V_BOM_TSPREDICTION.PREDICTED * CP_BOMHEADER.COMP_QTY,
      2
    )
  END AS ACT_COMP_QTY,
  V_STRUC_NODE_QTY.STRUC_QTY,
  V_STRUC_NODE_QTY.UPPER_LIMIT,
  V_STRUC_NODE_QTY.LOWER_LIMIT,
  CASE
    WHEN V_STRUC_NODE_QTY.STRUC_QTY < V_STRUC_NODE_QTY.LOWER_LIMIT
    AND V_STRUC_NODE_QTY.STRUC_QTY > 0 THEN CEIL(
      CASE
        WHEN V_BOM_TSPREDICTION.PREDICTED IS NULL THEN ROUND(
          CP_IBP_FUTUREDEMAND.QUANTITY * CP_BOMHEADER.COMP_QTY,
          2
        )
        ELSE ROUND(
          V_BOM_TSPREDICTION.PREDICTED * CP_BOMHEADER.COMP_QTY,
          2
        )
      END * (
        V_STRUC_NODE_QTY.LOWER_LIMIT / V_STRUC_NODE_QTY.STRUC_QTY
      ) * CP_BOMHEADER.COMP_QTY
    )
    WHEN V_STRUC_NODE_QTY.STRUC_QTY > V_STRUC_NODE_QTY.UPPER_LIMIT
    AND V_STRUC_NODE_QTY.STRUC_QTY > 0 THEN CEIL(
      CASE
        WHEN V_BOM_TSPREDICTION.PREDICTED IS NULL THEN ROUND(
          CP_IBP_FUTUREDEMAND.QUANTITY * CP_BOMHEADER.COMP_QTY,
          2
        )
        ELSE ROUND(
          V_BOM_TSPREDICTION.PREDICTED * CP_BOMHEADER.COMP_QTY,
          2
        )
      END * (
        V_STRUC_NODE_QTY.UPPER_LIMIT / V_STRUC_NODE_QTY.STRUC_QTY
      ) * CP_BOMHEADER.COMP_QTY
    )
    ELSE ROUND(
      V_BOM_TSPREDICTION.PREDICTED * CP_BOMHEADER.COMP_QTY
    )
  END AS COMP_QTY
FROM CP_BOMHEADER
  INNER JOIN CP_IBP_FUTUREDEMAND
 ON CP_IBP_FUTUREDEMAND.LOCATION_ID = CP_BOMHEADER.LOCATION_ID
  AND CP_IBP_FUTUREDEMAND.PRODUCT_ID = CP_BOMHEADER.PRODUCT_ID
  LEFT OUTER JOIN CP_PVS_BOM
 ON CP_BOMHEADER.LOCATION_ID = CP_PVS_BOM.LOCATION_ID
  AND CP_BOMHEADER.PRODUCT_ID = CP_PVS_BOM.PRODUCT_ID
  AND CP_BOMHEADER.ITEM_NUM = CP_PVS_BOM.ITEM_NUM
  AND CP_BOMHEADER.COMPONENT = CP_PVS_BOM.COMPONENT
  LEFT OUTER JOIN V_BOM_TSPREDICTION
 ON V_BOM_TSPREDICTION.LOCATION_ID = CP_PVS_BOM.LOCATION_ID
  AND V_BOM_TSPREDICTION.PRODUCT_ID = CP_PVS_BOM.PRODUCT_ID
  AND V_BOM_TSPREDICTION.ITEM_NUM = CP_PVS_BOM.ITEM_NUM
  AND V_BOM_TSPREDICTION.COMPONENT = CP_PVS_BOM.COMPONENT
  AND V_BOM_TSPREDICTION.VERSION = CP_IBP_FUTUREDEMAND.VERSION
  AND V_BOM_TSPREDICTION.SCENARIO = CP_IBP_FUTUREDEMAND.SCENARIO
  AND V_BOM_TSPREDICTION.CAL_DATE = CP_IBP_FUTUREDEMAND.WEEK_DATE
  LEFT OUTER JOIN V_STRUC_NODE_QTY
 ON V_STRUC_NODE_QTY.LOCATION_ID = CP_PVS_BOM.LOCATION_ID
  AND V_STRUC_NODE_QTY.PRODUCT_ID = CP_PVS_BOM.PRODUCT_ID
  AND V_STRUC_NODE_QTY.STRUC_NODE = CP_PVS_BOM.STRUC_NODE
  AND V_STRUC_NODE_QTY.VERSION = CP_IBP_FUTUREDEMAND.VERSION
  AND V_STRUC_NODE_QTY.SCENARIO = CP_IBP_FUTUREDEMAND.SCENARIO
  AND V_STRUC_NODE_QTY.WEEK_DATE = CP_IBP_FUTUREDEMAND.WEEK_DATE
  AND V_STRUC_NODE_QTY.MODEL_VERSION = V_BOM_TSPREDICTION.MODEL_VERSION
  INNER JOIN CP_FACTORY_SALESLOC
  ON CP_BOMHEADER.LOCATION_ID = CP_FACTORY_SALESLOC.PLAN_LOC