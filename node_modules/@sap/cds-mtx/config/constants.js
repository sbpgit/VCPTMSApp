const path = require('path');

const MODELS_ROOT_FOLDER = path.join(process.cwd(), 'tenant_models');
const MODEL_BASE = path.join(process.cwd(), 'sdc');

module.exports = {

    MODELS_ROOT_FOLDER: MODELS_ROOT_FOLDER,

    MODEL_BASE: MODEL_BASE,

    MODEL_BASE_DB: path.join(MODEL_BASE, 'db'),

    MODEL_BASE_SRV: path.join(MODEL_BASE, 'srv'),

    TEMPLATES_DIR: path.join(__dirname, 'templates'),

    DEPLOYER_PAYLOAD_API: '/v1/payload',

    DEFAULT_APP_ID: 'default',

    PERMALINKS: {
        //DEPLOY_AS_MULTITENANT: `guides/multitenancy#nodejs-stack`,
        //CDS_DEPLOY_HANA: `guides/databases#cds-deploy-hana`,
        //MULTITENANCY_CONFIGURATION: `guides/multitenancy#configuration`
    },

    METADATA_SERVICE_TYPE: {
        EDMX: 'edmx',
        CSN: 'csn',
        NODE_CSN: 'node_csn',
        LANGUAGES: 'languages',
        SERVICES: 'services',
    },

    MODEL_TYPE: {
        base: 'base',
        extension: 'extension',
        compiled: 'compiled',
        migration: 'migration'
    },

    METADATA_TYPE: {
        onboarding: 'onboarding',
        languages: 'languages',
        services: 'services',
        tenantSubdomainMapping: 'tenant-subdomain-mapping',
        undeploy: 'undeploy'
    },

    TENANT_SUBDOMAIN_MAPPING: 'tenant-subdomain-mapping',

    GLOBAL_DATA_META_TENANT: '__META__',

    EXTERNAL_DEPLOYER_DESTINATION_NAME: 'hdidynamicdeploy',

    SCOPES: {
        EXTEND:       '$XSAPPNAME.ExtendCDS',
        DELETE:       '$XSAPPNAME.ExtendCDSdelete',
        SUBSCRIPTION: '$XSAPPNAME.mtcallback',
        DEPLOYMENT:   '$XSAPPNAME.mtdeployment',
        DIAGNOSE:     '$XSAPPNAME.MtxDiagnose'
    },

    META_TENANT_REGEX: /TENANT-(.*)-META/i,
    MT_LIB_TENANT_REGEX: /MT-LIB-TENANT-(.*)/i,

    BASE_MODEL_NAME: '_base',

    BASE_MODEL_FOLDER_FILTER: /(.*\.cds$|.*\.csn$|.*\/csn.json$|^csn.json$)/,

    BASE_MODEL_MIGRATION_FILTER: /(^db\/src\/.*\.hdbmigrationtable|^db\/last-dev\/csn.json$)/,

    BASE_MODEL_MIGRATION_FOLDER_FILTER: /(.*\/|^)last-dev$/,

    BASE_MODEL_NATIVE_HANA_FILTER: /(.*\.hdb.*$|(.*\/|^)last-dev\/csn.json$|.*\.csv|undeploy\.json|^.*\/src\/.*\.properties$)/,

    BASE_MODEL_FILES_FILTER: /(.*\.cds$|.*\.csn$|.*\/csn.json$|^csn.json$|.*\/i18n(|_.*)(\.json|\.properties)$)/,

    BASE_MODEL_EXTENSION_PROJECT_FILTER: /(.*\.cds$|.*\.csn$|.*\/csn.json$|^csn.json$|.*\/i18n(|_.*)(\.json|\.properties)$)/,

    COMPILED_FILES: {
        CSN_NODE: 'csn_node.json', // deprecated
        CSN: 'csn.json',
        ODATA_CSN: 'odata_csn.json',
        I18N: '_i18n/i18n.json'
    },

    // keep in sync with respective template directories
    TENANT_META_TABLE_NAMES: {
        TENANT_METADATA: 'TENANT_METADATA',
        TENANT_FILES: 'TENANT_FILES',
        CUSTOM_TENANT_CONTENT: 'CUSTOM_TENANT_CONTENT'
    },

    META_TABLES: [
        'TENANT_UPDATES',
        'JOBS'
    ],

    UPDATE_TYPE: {
        EXTENSION: 'EXTENSION',
        BASE: 'BASE',
        DELETE: 'DELETE',
        CREATE: 'CREATE' // needed to replace remaining DELETE entries
    }
};
