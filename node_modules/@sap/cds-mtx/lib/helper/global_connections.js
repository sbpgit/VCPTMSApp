const InstanceManagerFactory = require('./cf/instance_manager_factory');
const TenantMetadataPersistenceFactory = require('../data/tenant_metadata/tenant_metadata_persistence_factory');

const DEFAULT_ADAPTER = 'hdi';

let _tenantMetadataPersistenceFactory;

class GlobalConnections {

    static async _initTenantMetadataPersistenceFactory() {
        const adapter = DEFAULT_ADAPTER;
        const instanceManager = await InstanceManagerFactory.get();
        const domain = GlobalConnections.getDomain();
        _tenantMetadataPersistenceFactory = new TenantMetadataPersistenceFactory(instanceManager, adapter, domain);
        return _tenantMetadataPersistenceFactory;
    }

    static async createMetadataPersistenceFactory() {
        if (!_tenantMetadataPersistenceFactory) await this._initTenantMetadataPersistenceFactory();
    }

    static async getTenantMetadataPersistenceFactory() {
        return _tenantMetadataPersistenceFactory || await this._initTenantMetadataPersistenceFactory();
    }

    static async createMetadataPersistenceAndConnect(tenantId, ensureCreated = false, subscriptionData) {
        const metadataPersistence = await this.getTenantMetadataPersistenceFactory();
        return metadataPersistence.createInstanceAndConnect(tenantId, ensureCreated, subscriptionData);
    }

    static resetTenantMetadataPersistenceFactory() {
        _tenantMetadataPersistenceFactory && _tenantMetadataPersistenceFactory.updateBaseModel();
        _tenantMetadataPersistenceFactory = undefined;
    }

    static get applicationDataPersistence() {
        return require('../data/tenant/hdi_application_data_persistence');
    }

    static get deploymentStrategy() {
        return require('../tenant/deployment/hdi_deployment');
    }

    static get jobExecutor() {
        return require('../jobs/job_executor');
    }

    static getDomain() {
        const _cds = require('../cds');
        return _cds.env.mtx && _cds.env.mtx.domain || '__default__';
    }
}

module.exports = GlobalConnections;
