"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const common_1 = require("../../../../specification/common");
const appProvider_1 = require("../../../common/appProvider");
const common_2 = require("../common");
const overviewPage_1 = require("../pages/overviewPage");
const application_1 = require("../../application");
const common_3 = require("../../../common");
const schemaAccess_1 = require("../../../../specification/schemaAccess");
class V2OvpProvider extends appProvider_1.AppProvider {
    constructor(manifest, schemas, logger) {
        const pages = {};
        const sapOvp = manifest[common_1.ManifestSection.ovp];
        const appSettings = new application_1.AppSettings();
        const schemaFile = common_3.getSchemaFilePath(schemaAccess_1.SchemaType.Application);
        common_2.transferSettingsOfObject(appSettings, manifest, schemas[schemaFile.filename]['definitions']['AppSettings'], undefined);
        const jsonSchema = Object.keys(schemas).find((element) => element.includes(common_1.PageType.OverviewPage));
        const parameters = {
            manifest,
            jsonSchema: schemas[jsonSchema]
        };
        const page = {
            pageType: common_1.PageType.OverviewPage,
            config: overviewPage_1.createOverviewPageConfig(parameters),
            entitySet: sapOvp.globalFilterEntitySet
        };
        const id = common_3.generatePageId(page.pageType, page.entitySet, page.navigationProperty);
        pages[id] = page;
        super(manifest, schemas, id, pages, common_1.FioriElementsVersion.v2, appSettings, logger);
    }
}
exports.V2OvpProvider = V2OvpProvider;
//# sourceMappingURL=ovpProvider.js.map